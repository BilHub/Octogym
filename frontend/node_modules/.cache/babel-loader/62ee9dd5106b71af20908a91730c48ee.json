{"ast":null,"code":"var _jsxFileName = \"/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/clients/PaiementModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\nimport { useGetAPI, usePutAPI } from '../useAPI';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios';\nimport PageTitle from \"../../layouts/PageTitle\";\nimport { ToastContainer, toast } from 'react-toastify'; // import { Dropdown, Tab, Nav } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nconst formatDate = date => {\n  return new Date(date).toISOString().slice(0, 10);\n};\n\nconst PaiementModal = _ref => {\n  _s();\n\n  let {\n    show,\n    onShowShange,\n    clientData\n  } = _ref;\n  const handleShow = useCallback(() => {\n    onShowShange(false);\n  }, [onShowShange]);\n  const clientId = clientData['clientId'];\n  const abonnements = clientData['abcs'];\n  const paiementCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create`;\n  const [amount, setAmount] = useState(\"\");\n  const [erreur, seterreur] = useState(false);\n  const [abcId, setAbcId] = useState([]);\n  const [dateCreation, setDateCreation] = useState(formatDate(new Date()));\n  const [note, setNote] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false); // useEffect(() => {\n  //   if (show == true) {\n  //     const fetchData = async () => {\n  //        try {\n  //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\n  //           setAbc(res.data)\n  //           console.log('ceci est le resultat de labonnement client ', res.data);\n  //        } catch (error) {\n  //           console.log(error);\n  //        }\n  //     }\n  //     fetchData();\n  //   }\n  // }, [clientId] );\n\n  const notifySuccess = () => {\n    toast.success('Paiement  effectuer Avec SuccÃ©e', {\n      position: 'top-right',\n      autoClose: 5000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n\n  const notifyError = () => {\n    toast.error('Echec de paiement', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n\n  useEffect(() => {\n    if (error == true) {\n      notifyError();\n    }\n  }, [error]);\n  useEffect(() => {\n    if (success == true) {\n      notifySuccess();\n    }\n  }, [success]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const paiementDetails = {\n      abonnement_client: Number(abcId),\n      amount: amount,\n      notes: note,\n      date_creation: dateCreation\n    };\n    console.log(\" =================> new Creneau \", paiementDetails);\n\n    try {\n      const axWait = await axios.post(paiementCreateEND, paiementDetails);\n      setSuccess(true);\n      setTimeout(() => {// refreshPage()\n      }, 100); // return axWait\n\n      handleShow();\n    } catch (error) {\n      setError(true);\n      console.log('je suis la ', error);\n    } // refreshPage()\n    // setCreneaux([])\n    // handleShow()\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"fade bd-example-modal-lg\",\n    size: \"xl\",\n    onHide: handleShow,\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"text-black font-weight-bold\",\n        children: [\"Creer un nouveau paiement pour : \", clientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"\",\n        className: \"close\",\n        onClick: handleShow,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete // id={(option) =>  option['id']}\n            , {\n              onChange: (event, value) => {\n                try {\n                  setAbcId(value.id);\n                  seterreur(false);\n                } catch (error) {\n                  setAbcId('');\n                  seterreur(true);\n                }\n              } // onChange={handleSubmit}\n              ,\n              options: abonnements //  value={activities[creneauActivite]}\n              ,\n              getOptionSelected: option => option['id'],\n              getOptionLabel: option => option['type_abonnement_name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Abonnements\",\n                variant: \"outlined\",\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), erreur && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"veuillez choisir un abonnement du client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\" //   defaultValue={}\n              ,\n              label: \"Montant\",\n              variant: \"outlined\",\n              onChange: e => setAmount(e.currentTarget.value) // onChange={(event, value) => setNewStartHour(value)}\n              ,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col- col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"date\",\n              value: dateCreation,\n              onChange: e => setDateCreation(e.currentTarget.value),\n              variant: \"outlined\",\n              label: \"Date\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col- col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              onChange: e => setNote(e.currentTarget.value),\n              variant: \"outlined\",\n              label: \"Note\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          variant: \"danger light\",\n          className: \"m-2\",\n          children: \" Fermer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaiementModal, \"2e/wo/yUwF7klY7JUKn6GsBe0aM=\");\n\n_c = PaiementModal;\nexport default PaiementModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaiementModal\");","map":{"version":3,"sources":["/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/clients/PaiementModal.jsx"],"names":["React","useState","useCallback","useEffect","Row","Card","Col","Button","Modal","Table","useGetAPI","usePutAPI","TextField","Autocomplete","axios","PageTitle","ToastContainer","toast","refreshPage","window","location","reload","formatDate","date","Date","toISOString","slice","PaiementModal","show","onShowShange","clientData","handleShow","clientId","abonnements","paiementCreateEND","process","env","REACT_APP_API_URL","amount","setAmount","erreur","seterreur","abcId","setAbcId","dateCreation","setDateCreation","note","setNote","error","setError","success","setSuccess","notifySuccess","position","autoClose","closeOnClick","pauseOnHover","draggable","notifyError","hideProgressBar","handleSubmit","e","preventDefault","paiementDetails","abonnement_client","Number","notes","date_creation","console","log","axWait","post","setTimeout","event","value","id","option","params","color","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { useGetAPI, usePutAPI } from '../useAPI'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst formatDate = (date) => {\r\n  return new Date(date).toISOString().slice(0, 10)\r\n}\r\nconst PaiementModal = ({show, onShowShange, clientData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const clientId = clientData['clientId']\r\n    const abonnements = clientData['abcs']\r\n    const paiementCreateEND =`${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create` \r\n    const [amount, setAmount] = useState(\"\")\r\n    const [erreur, seterreur] = useState(false)\r\n    const [abcId, setAbcId] = useState([])\r\n    const [dateCreation, setDateCreation] = useState(formatDate(new Date()))\r\n    const [note, setNote] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    \r\n    // useEffect(() => {\r\n    //   if (show == true) {\r\n        \r\n    //     const fetchData = async () => {\r\n    //        try {\r\n    //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\r\n    //           setAbc(res.data)\r\n    //           console.log('ceci est le resultat de labonnement client ', res.data);\r\n    //        } catch (error) {\r\n    //           console.log(error);\r\n    //        }\r\n    //     }\r\n    //     fetchData();\r\n    //   }\r\n    // }, [clientId] );\r\n    const notifySuccess = () => {\r\n      toast.success('Paiement  effectuer Avec SuccÃ©e', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      })\r\n    }\r\n  const notifyError = () => {\r\n      toast.error('Echec de paiement', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      })\r\n    }\r\n    useEffect(() => {\r\n      if (error == true) {\r\n        notifyError()\r\n      }\r\n    }, [error]);\r\n    useEffect(() => {\r\n      if (success == true) {\r\n        notifySuccess()\r\n      }\r\n    }, [success]);\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n        const paiementDetails = {\r\n          abonnement_client :Number(abcId),\r\n          amount : amount,\r\n          notes : note,\r\n          date_creation : dateCreation\r\n        }\r\n        console.log(\" =================> new Creneau \", paiementDetails);\r\n        try {\r\n          const axWait =await axios.post(paiementCreateEND, paiementDetails)\r\n          setSuccess(true)\r\n          setTimeout(() => {\r\n            // refreshPage()\r\n          }, 100);\r\n\r\n          // return axWait\r\n          handleShow()\r\n        } catch (error) {\r\n          setError(true)\r\n          console.log('je suis la ', error);\r\n          \r\n        }\r\n        // refreshPage()\r\n        // setCreneaux([])\r\n        // handleShow()\r\n      }\r\nreturn ( \r\n\r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Creer un nouveau paiement pour : {clientId}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              // id={(option) =>  option['id']}\r\n              onChange={((event, value) =>  {\r\n                try {\r\n                  setAbcId(value.id)\r\n                  seterreur(false)\r\n                } catch (error) {\r\n                  setAbcId('')\r\n                  seterreur(true)\r\n                }\r\n              })}\r\n              // onChange={handleSubmit}\r\n              options={abonnements}\r\n              //  value={activities[creneauActivite]}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  option['type_abonnement_name']}\r\n              renderInput={(params) => \r\n                <TextField {...params}  label=\"Abonnements\" variant=\"outlined\" fullWidth required />}\r\n            />\r\n            {erreur && <p style={{color:'red'}}>veuillez choisir un abonnement du client</p>}\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-6\">\r\n            <TextField\r\n                type=\"number\"\r\n              //   defaultValue={}\r\n                label=\"Montant\"\r\n                variant=\"outlined\"\r\n                onChange={e=> setAmount(e.currentTarget.value)}\r\n                // onChange={(event, value) => setNewStartHour(value)}\r\n                fullWidth\r\n              />\r\n          </div>\r\n          <div className=\"form-group col- col-md-6\">\r\n              <TextField type=\"date\" value={dateCreation} onChange={e=> setDateCreation(e.currentTarget.value)} variant=\"outlined\" label=\"Date\"fullWidth  />\r\n              </div>\r\n            <div className=\"form-group col- col-md-6\">\r\n              <TextField type=\"text\" onChange={e=> setNote(e.currentTarget.value)} variant=\"outlined\" label=\"Note\"fullWidth  />\r\n              </div>\r\n        </div>\r\n        <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Fermer </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PaiementModal;"]},"metadata":{},"sourceType":"module"}