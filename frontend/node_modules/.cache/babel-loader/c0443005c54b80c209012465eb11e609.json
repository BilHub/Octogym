{"ast":null,"code":"var _jsxFileName = \"/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/planning/CreneauCreateModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\nimport { useGetAPI, usePutAPI } from '../useAPI';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'; // import { Dropdown, Tab, Nav } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n\nimport useForm from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nconst PaiementCreateModal = _ref => {\n  _s();\n\n  let {\n    show,\n    onShowShange,\n    creneauData\n  } = _ref;\n  const handleShow = useCallback(() => {\n    onShowShange(false);\n  }, [onShowShange]);\n  const creneauCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/create/`;\n  const [newActivity, setNewActivity] = useState(\"\");\n  const [newCoach, setNewCoach] = useState(\"\");\n  const [newStartHour, setNewStartHour] = useState(\"\");\n  const [newEndHour, setNewEndHour] = useState(\"\");\n  const [newDay, setNewDay] = useState(\"\");\n  const [newPlanning, setNewPlanning] = useState(\"\");\n  const [newActivityError, setNewActivityError] = useState(false);\n  const [newCoachError, setNewCoachError] = useState(false);\n  const [newDayError, setNewDayError] = useState(false);\n  const [newPlanningError, setNewPlanningError] = useState(false);\n  const days = creneauData['days'];\n  const activities = creneauData['activities'];\n  const coachs = creneauData['coachs'];\n  const plannings = creneauData['plannings'];\n\n  const handleValidation = () => {\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!newActivity) {\n      formIsValid = false;\n      setNewActivityError(true);\n    }\n\n    if (!newCoach) {\n      formIsValid = false;\n      setNewCoachError(true);\n    }\n\n    if (!newDay) {\n      formIsValid = false;\n      setNewDayError(true);\n    }\n\n    if (!newPlanning) {\n      formIsValid = false;\n      setNewPlanningError(true);\n    } //  setErrors({errors: errors});\n\n\n    console.log('IS THE FORM VALID ======?', formIsValid);\n    return formIsValid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (handleValidation()) {\n      const newCreneau = {\n        hour_start: newStartHour,\n        hour_finish: newEndHour,\n        day: newDay,\n        coach: newCoach,\n        planning: newPlanning,\n        activity: newActivity\n      };\n      console.log(\" =================> new Creneau \", newCreneau);\n      axios.post(creneauCreateEND, newCreneau);\n      handleShow();\n      refreshPage();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"fade bd-example-modal-lg\",\n    size: \"lg\",\n    onHide: handleShow,\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"text-black\",\n        children: \"Cr\\xE9neau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"\",\n        className: \"close\",\n        onClick: handleShow,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete // id={(option) =>  option['id']}\n            , {\n              onChange: (event, value) => {\n                try {\n                  setNewActivity(value.id);\n                  setNewActivityError(false);\n                } catch (error) {\n                  setNewActivity('');\n                  setNewActivityError(true);\n                }\n              } // onChange={handleSubmit}\n              ,\n              options: activities,\n              getOptionSelected: option => option['id'],\n              getOptionLabel: option => option['name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Activit\\xE9\",\n                name: \"activity\",\n                variant: \"outlined\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), newActivityError && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#EF5350',\n                fontSize: '14px'\n              },\n              children: \" Veuillez choisir une activit\\xE9 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              onChange: (event, value) => {\n                try {\n                  setNewCoach(value.id);\n                  setNewCoachError(false);\n                } catch (error) {\n                  setNewCoach('');\n                  setNewCoachError(true);\n                }\n              },\n              options: coachs,\n              getOptionLabel: option => option['last_name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Coach\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this), newCoachError && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#EF5350',\n                fontSize: '14px'\n              },\n              children: \" Veuillez choisir un coach \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              onChange: (event, value) => {\n                try {\n                  setNewPlanning(value.id);\n                  setNewPlanningError(false);\n                } catch (error) {\n                  setNewPlanning('');\n                  setNewPlanningError(true);\n                }\n              },\n              options: plannings,\n              getOptionLabel: option => option['name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Planning\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), newPlanningError && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#EF5350',\n                fontSize: '14px'\n              },\n              children: \" Veuillez choisir un planning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              onChange: (event, value) => {\n                try {\n                  setNewDay(value.day);\n                  setNewDayError(false);\n                } catch (error) {\n                  setNewDay('');\n                  setNewDayError(true);\n                }\n              },\n              options: days,\n              getOptionLabel: option => option['label'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Jour\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }, this), newDayError && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#EF5350',\n                fontSize: '14px'\n              },\n              children: \" Veuillez choisir un jour \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"time\",\n              required: true //   defaultValue={startHour}\n              ,\n              label: \"Heure de D\\xE9but\",\n              variant: \"outlined\",\n              onChange: e => {\n                try {\n                  setNewStartHour(e.currentTarget.value);\n                } catch (error) {\n                  setNewStartHour('');\n                }\n              } // onChange={(event, value) => setNewStartHour(value)}\n              ,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"time\" //   defaultValue={endHour}\n              // value={creneauDetail.hour_finish}\n              // className={classes.textField}\n              ,\n              variant: \"outlined\",\n              label: \"Heure de Fin\",\n              required: true,\n              fullWidth: true // defaultValue={coachs[coach]}\n              ,\n              onChange: e => {\n                try {\n                  setNewEndHour(e.currentTarget.value);\n                } catch (error) {\n                  setNewEndHour('');\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          variant: \"danger light\",\n          className: \"m-2\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Sauvgarder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaiementCreateModal, \"dbQX61h3IIEqV37frLLgQx+CwxA=\");\n\n_c = PaiementCreateModal;\nexport default PaiementCreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaiementCreateModal\");","map":{"version":3,"sources":["/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/planning/CreneauCreateModal.jsx"],"names":["React","useState","useCallback","useEffect","Row","Card","Col","Button","Modal","Container","useGetAPI","usePutAPI","TextField","Autocomplete","axios","useForm","refreshPage","window","location","reload","PaiementCreateModal","show","onShowShange","creneauData","handleShow","creneauCreateEND","process","env","REACT_APP_API_URL","newActivity","setNewActivity","newCoach","setNewCoach","newStartHour","setNewStartHour","newEndHour","setNewEndHour","newDay","setNewDay","newPlanning","setNewPlanning","newActivityError","setNewActivityError","newCoachError","setNewCoachError","newDayError","setNewDayError","newPlanningError","setNewPlanningError","days","activities","coachs","plannings","handleValidation","errors","formIsValid","console","log","handleSubmit","e","preventDefault","newCreneau","hour_start","hour_finish","day","coach","planning","activity","post","event","value","id","error","option","params","color","fontSize","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport { useGetAPI, usePutAPI } from '../useAPI'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst PaiementCreateModal = ({show, onShowShange, creneauData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const creneauCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/create/`\r\n\r\n    const [newActivity, setNewActivity] = useState(\"\")\r\n    const [newCoach, setNewCoach] = useState(\"\")\r\n    const [newStartHour, setNewStartHour] = useState(\"\")\r\n    const [newEndHour, setNewEndHour] = useState(\"\")\r\n    const [newDay, setNewDay] = useState(\"\")\r\n    const [newPlanning, setNewPlanning] = useState(\"\")\r\n\r\n    const [newActivityError, setNewActivityError ] = useState(false)\r\n    const [newCoachError, setNewCoachError ] = useState(false)\r\n    const [newDayError, setNewDayError ] = useState(false)\r\n    const [newPlanningError, setNewPlanningError ] = useState(false)\r\n\r\n\r\n    const days = creneauData['days']\r\n    const activities = creneauData['activities']  \r\n    const coachs =  creneauData['coachs']\r\n\r\n    const plannings = creneauData['plannings']  \r\n\r\n    const handleValidation = () => {\r\n      let errors = {};\r\n      let formIsValid = true;\r\n\r\n      //Name\r\n      if(!newActivity){\r\n          formIsValid = false;\r\n          setNewActivityError(true)\r\n        }\r\n\r\n      if(!newCoach){\r\n          formIsValid = false;\r\n          setNewCoachError(true)\r\n        }\r\n    \r\n     \r\n      if(!newDay){\r\n          formIsValid = false;\r\n          setNewDayError(true)\r\n        }\r\n      if(!newPlanning){\r\n          formIsValid = false;\r\n          setNewPlanningError(true)\r\n        }\r\n\r\n    //  setErrors({errors: errors});\r\n     console.log('IS THE FORM VALID ======?', formIsValid);\r\n     return formIsValid;\r\n }\r\n\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (handleValidation()) {\r\n        const newCreneau = {\r\n          hour_start :newStartHour,\r\n          hour_finish :newEndHour,\r\n          day :newDay,\r\n          coach :newCoach,\r\n          planning :newPlanning,\r\n          activity :newActivity,\r\n        }\r\n        console.log(\" =================> new Creneau \", newCreneau);\r\n        axios.post(creneauCreateEND, newCreneau)\r\n        handleShow()\r\n        refreshPage()\r\n      }}\r\n\r\nreturn ( \r\n\r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"text-black\">Créneau</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              // id={(option) =>  option['id']}\r\n              onChange={(event, value) => \r\n                {try {\r\n                  setNewActivity(value.id)\r\n                  setNewActivityError(false)\r\n                } catch (error) {\r\n                  setNewActivity('')\r\n                  setNewActivityError(true)\r\n                }}\r\n               \r\n                }\r\n              // onChange={handleSubmit}\r\n              options={activities}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  option['name']}\r\n              renderInput={(params) => <TextField {...params}  label=\"Activité\" name=\"activity\" variant=\"outlined\" fullWidth />}\r\n            />\r\n           {newActivityError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir une activité </span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            onChange={(event, value) =>\r\n              {\r\n                try {\r\n                setNewCoach(value.id)\r\n                setNewCoachError(false)\r\n              } catch (error) {\r\n                setNewCoach('')\r\n                setNewCoachError(true)\r\n              }}\r\n             \r\n              }\r\n            options={coachs}\r\n            getOptionLabel={(option) =>  option['last_name']}\r\n            renderInput={(params) => <TextField {...params} label=\"Coach\" variant=\"outlined\" />}\r\n            />\r\n            {newCoachError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un coach </span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              onChange={(event, value) => \r\n                {\r\n                  try {\r\n                  setNewPlanning(value.id)\r\n                  setNewPlanningError(false)\r\n                } catch (error) {\r\n                  setNewPlanning('')\r\n                  setNewPlanningError(true)\r\n                }}\r\n               \r\n                }\r\n                \r\n              options={plannings}\r\n              getOptionLabel={(option) =>  option['name']}\r\n              renderInput={(params) => <TextField {...params} label=\"Planning\" variant=\"outlined\" />}\r\n              />\r\n              {newPlanningError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un planning</span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            onChange={(event, value) => \r\n              {\r\n                try {\r\n                setNewDay(value.day)\r\n                setNewDayError(false)\r\n              } catch (error) {\r\n                setNewDay('')\r\n                setNewDayError(true)\r\n              }}\r\n              }\r\n            options={days}\r\n            getOptionLabel={(option) =>  option['label']}\r\n            renderInput={(params) => <TextField {...params} label=\"Jour\" variant=\"outlined\" />}\r\n            />\r\n            {newDayError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un jour </span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"time\"\r\n            required\r\n          //   defaultValue={startHour}\r\n            label=\"Heure de Début\"\r\n            variant=\"outlined\"\r\n            onChange={e=> \r\n              {\r\n                try {\r\n                setNewStartHour(e.currentTarget.value)\r\n              } catch (error) {\r\n                setNewStartHour('')\r\n              }}\r\n             \r\n              }\r\n            // onChange={(event, value) => setNewStartHour(value)}\r\n            fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"time\"\r\n          //   defaultValue={endHour}\r\n            // value={creneauDetail.hour_finish}\r\n            // className={classes.textField}\r\n            variant=\"outlined\"\r\n            label=\"Heure de Fin\"\r\n              required\r\n            fullWidth\r\n            // defaultValue={coachs[coach]}\r\n            onChange={e => \r\n              {\r\n                try {\r\n                setNewEndHour(e.currentTarget.value)\r\n              } catch (error) {\r\n                setNewEndHour('')\r\n              }}\r\n              }\r\n          />\r\n          </div>\r\n        </div>\r\n        <Button onClick={handleShow}variant=\"danger light\"className='m-2'>\r\n            Fermer\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Sauvgarder</Button>\r\n        </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PaiementCreateModal;"]},"metadata":{},"sourceType":"module"}