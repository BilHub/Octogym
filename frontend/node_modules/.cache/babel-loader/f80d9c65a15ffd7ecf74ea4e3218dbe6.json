{"ast":null,"code":"var _jsxFileName = \"/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/transactions/PaiementCreateModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\nimport { useGetAPI, usePutAPI } from '../useAPI';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'; // import { Dropdown, Tab, Nav } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n\nimport useForm from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nconst PaiementCreateModal = _ref => {\n  _s();\n\n  let {\n    show,\n    onShowShange\n  } = _ref;\n  const handleShow = useCallback(() => {\n    onShowShange(false);\n  }, [onShowShange]); // const {register, handleSubmit, errors } = useForm();\n\n  let paiementCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create`; // let abonnementTypeEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\n\n  let clientsEnd = `${process.env.REACT_APP_API_URL}/rest-api/clients-name-drop/`;\n  const [abc, setAbc] = useState([]);\n  const [abcId, setAbcId] = useState([]);\n  const [client, setClient] = useState(\"\");\n  const [clients, setClients] = useState(\"\");\n  const [dettes, showDettes] = useState(false);\n  const [erreur, seterreur] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [clientId, setClientId] = useState(\"\"); //  const [abonnement, setAbonnement] = useState(\"\")\n\n  const [note, setNote] = useState(\"\"); //  const clients = useGetAPI(clientsEnd)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(clientsEnd);\n        setClients(res.data); //  console.log('les clizents ???', res.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (show == true) {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\n          setAbc(res.data);\n          console.log('ceci est le resultat de labonnement client ', res.data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      fetchData();\n    }\n  }, [clientId]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTransaction = {\n      amount: amount,\n      abonnement_client: Number(abcId),\n      // type : Number(abonnement),\n      note: note\n    };\n    await axios.post(paiementCreateEnd, newTransaction); // refreshPage()\n\n    handleShow();\n  };\n\n  console.log('creneaux detail');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"fade bd-example-modal-lg\",\n    size: \"lg\",\n    onHide: handleShow,\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Paiement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"\",\n        className: \"close\",\n        onClick: handleShow,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete // id={(option) =>  option['id']}\n            , {\n              onChange: (event, value) => {\n                try {\n                  setClientId(value.id);\n                  seterreur(false);\n                  showDettes(true);\n                } catch (error) {\n                  setClientId('');\n                  seterreur(true);\n                }\n              } // onChange={handleSubmit}\n              ,\n              options: clients //  value={activities[creneauActivite]}\n              ,\n              getOptionSelected: option => option['id'],\n              getOptionLabel: option => option['id'] + ' - ' + option['last_name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Clients\",\n                variant: \"outlined\",\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 39\n            }, this), erreur && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"veuillez choisir un client pour le paiement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete // id={(option) =>  option['id']}\n            , {\n              onChange: (event, value) => {\n                try {\n                  setAbcId(value.id);\n                  seterreur(false);\n                  showDettes(true);\n                } catch (error) {\n                  setAbcId('');\n                  seterreur(true);\n                }\n              } // onChange={handleSubmit}\n              ,\n              options: abc //  value={activities[creneauActivite]}\n              ,\n              getOptionSelected: option => option['id'],\n              getOptionLabel: option => option['type_abonnement_name'],\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Abonnements\",\n                variant: \"outlined\",\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 39\n            }, this), erreur && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: \"veuillez choisir un abonnement du client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\" //   defaultValue={}\n              ,\n              label: \"Montant\",\n              variant: \"outlined\",\n              onChange: e => setAmount(e.currentTarget.value) // onChange={(event, value) => setNewStartHour(value)}\n              ,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              onChange: e => setNote(e.currentTarget.value) //   defaultValue={endHour}\n              // value={creneauDetail.hour_finish}\n              // className={classes.textField}\n              ,\n              variant: \"outlined\",\n              label: \"Note\",\n              fullWidth: true // defaultValue={coachs[coach]}\n              //   onChange={e => setNewEndHour(e.currentTarget.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShow,\n          variant: \"danger light\",\n          className: \"m-2\",\n          children: \"Annul\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Confirmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaiementCreateModal, \"cHVi/qmo0qUwel14Zbo7PBkNeGk=\");\n\n_c = PaiementCreateModal;\nexport default PaiementCreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaiementCreateModal\");","map":{"version":3,"sources":["/home/bil/Desktop/web projects/octopus/Octogym/frontend/src/jsx/components/transactions/PaiementCreateModal.jsx"],"names":["React","useState","useCallback","useEffect","Row","Card","Col","Button","Modal","Container","useGetAPI","usePutAPI","TextField","Autocomplete","axios","useForm","refreshPage","window","location","reload","PaiementCreateModal","show","onShowShange","handleShow","paiementCreateEnd","process","env","REACT_APP_API_URL","clientsEnd","abc","setAbc","abcId","setAbcId","client","setClient","clients","setClients","dettes","showDettes","erreur","seterreur","amount","setAmount","clientId","setClientId","note","setNote","fetchData","res","get","data","error","console","log","handleSubmit","e","preventDefault","newTransaction","abonnement_client","Number","post","event","value","id","option","params","color","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,SAAxC,QAAyD,iBAAzD;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AACA,SAASC,WAAT,GAAuB;AACrBC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;;AACD,MAAMC,mBAAmB,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAyB;AAClD,QAAMC,UAAU,GAAGrB,WAAW,CAAE,MAAM;AAACoB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,GAA7B,EAA+B,CAACA,YAAD,CAA/B,CAA9B,CADkD,CAGlD;;AAEA,MAAIE,iBAAiB,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wCAAzD,CALkD,CAMlD;;AACA,MAAIC,UAAU,GAAI,GAAEH,OAAO,CAACC,GAAR,CAAYC,iBAAkB,8BAAlD;AAED,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgB7B,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoC,MAAD,EAASC,UAAT,IAAuBrC,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACsC,MAAD,EAASC,SAAT,IAAsBvC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwC,MAAD,EAASC,SAAT,IAAsBzC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0C,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC,EAAD,CAAxC,CAhBmD,CAkBpD;;AACC,QAAM,CAAC4C,IAAD,EAAOC,OAAP,IAAkB7C,QAAQ,CAAC,EAAD,CAAhC,CAnBmD,CAoBpD;;AAEEE,EAAAA,SAAS,CAAC,MAAM;AACb,UAAM4C,SAAS,GAAG,YAAY;AAC3B,UAAI;AACD,cAAMC,GAAG,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAUrB,UAAV,CAAlB;AACAQ,QAAAA,UAAU,CAACY,GAAG,CAACE,IAAL,CAAV,CAFC,CAGF;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACH,KARD;;AASAJ,IAAAA,SAAS;AACX,GAXQ,EAWN,EAXM,CAAT;AAYA5C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,IAAI,IAAI,IAAZ,EAAkB;AAEhB,YAAM0B,SAAS,GAAG,YAAY;AAC3B,YAAI;AACD,gBAAMC,GAAG,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAW,GAAExB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,sCAAqCgB,QAAS,EAAzF,CAAlB;AACAb,UAAAA,MAAM,CAACkB,GAAG,CAACE,IAAL,CAAN;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DL,GAAG,CAACE,IAA/D;AACF,SAJD,CAIE,OAAOC,KAAP,EAAc;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACH,OARD;;AASAJ,MAAAA,SAAS;AACV;AACF,GAdQ,EAcN,CAACJ,QAAD,CAdM,CAAT;;AAeA,QAAMW,YAAY,GAAE,MAAMC,CAAN,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAG;AACrBhB,MAAAA,MAAM,EAAGA,MADY;AAErBiB,MAAAA,iBAAiB,EAAEC,MAAM,CAAC5B,KAAD,CAFJ;AAGrB;AACAc,MAAAA,IAAI,EAAGA;AAJc,KAAvB;AAMA,UAAM/B,KAAK,CAAC8C,IAAN,CAAWpC,iBAAX,EAA8BiC,cAA9B,CAAN,CAR6B,CAS7B;;AACAlC,IAAAA,UAAU;AACX,GAXD;;AAYA6B,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEJ,sBAEI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,0BAAjB;AAA4C,IAAA,IAAI,EAAC,IAAjD;AAAqD,IAAA,MAAM,EAAE9B,UAA7D;AAAyE,IAAA,IAAI,EAAEF,IAA/E;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,EADZ;AAEI,QAAA,SAAS,EAAC,OAFd;AAGI,QAAA,OAAO,EAAEE,UAHb;AAAA,+BAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAWA,QAAC,KAAD,CAAO,IAAP;AAAA,6BAEA;AAAM,QAAA,QAAQ,EAAE+B,YAAhB;AAAA,gCAC6B;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCAaG;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,oCACE,QAAC,YAAD,CACE;AADF;AAEE,cAAA,QAAQ,EAAG,CAACO,KAAD,EAAQC,KAAR,KAAmB;AAC5B,oBAAI;AACFlB,kBAAAA,WAAW,CAACkB,KAAK,CAACC,EAAP,CAAX;AACAvB,kBAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,kBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,iBAJD,CAIE,OAAOa,KAAP,EAAc;AACdP,kBAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,kBAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,eAXH,CAYE;AAZF;AAaE,cAAA,OAAO,EAAEL,OAbX,CAcC;AAdD;AAeE,cAAA,iBAAiB,EAAG6B,MAAD,IAAaA,MAAM,CAAC,IAAD,CAfxC;AAgBE,cAAA,cAAc,EAAGA,MAAD,IAAgBA,MAAM,CAAC,IAAD,CAAN,GAAc,KAAd,GAAqBA,MAAM,CAAC,WAAD,CAhB7D;AAiBE,cAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAwB,gBAAA,KAAK,EAAC,SAA9B;AAAwC,gBAAA,OAAO,EAAC,UAAhD;AAA2D,gBAAA,SAAS,MAApE;AAAqE,gBAAA,QAAQ;AAA7E;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,oBADF,EAqBG1B,MAAM,iBAAI;AAAG,cAAA,KAAK,EAAE;AAAC2B,gBAAAA,KAAK,EAAC;AAAP,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbH,eAqCG;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,oCACE,QAAC,YAAD,CACE;AADF;AAEE,cAAA,QAAQ,EAAG,CAACL,KAAD,EAAQC,KAAR,KAAmB;AAC5B,oBAAI;AACF9B,kBAAAA,QAAQ,CAAC8B,KAAK,CAACC,EAAP,CAAR;AACAvB,kBAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,kBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,iBAJD,CAIE,OAAOa,KAAP,EAAc;AACdnB,kBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAQ,kBAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,eAXH,CAYE;AAZF;AAaE,cAAA,OAAO,EAAEX,GAbX,CAcC;AAdD;AAeE,cAAA,iBAAiB,EAAGmC,MAAD,IAAaA,MAAM,CAAC,IAAD,CAfxC;AAgBE,cAAA,cAAc,EAAGA,MAAD,IAAaA,MAAM,CAAC,sBAAD,CAhBrC;AAiBE,cAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAwB,gBAAA,KAAK,EAAC,aAA9B;AAA4C,gBAAA,OAAO,EAAC,UAApD;AAA+D,gBAAA,SAAS,MAAxE;AAAyE,gBAAA,QAAQ;AAAjF;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,oBADF,EAqBG1B,MAAM,iBAAI;AAAG,cAAA,KAAK,EAAE;AAAC2B,gBAAAA,KAAK,EAAC;AAAP,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBb;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCH,eA6DG;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACA,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,QADP,CAEA;AAFA;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,QAAQ,EAAEX,CAAC,IAAGb,SAAS,CAACa,CAAC,CAACY,aAAF,CAAgBL,KAAjB,CALzB,CAME;AANF;AAOE,cAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBA7DH,eAwEG;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACA,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,QAAQ,EAAEP,CAAC,IAAGT,OAAO,CAACS,CAAC,CAACY,aAAF,CAAgBL,KAAjB,CAFvB,CAIA;AACE;AACA;AANF;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,KAAK,EAAC,MARR;AAUE,cAAA,SAAS,MAVX,CAWE;AACF;;AAZA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAxEH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD7B,eA0F6B,QAAC,MAAD;AACK,UAAA,OAAO,EAAEvC,UADd;AAEK,UAAA,OAAO,EAAC,cAFb;AAGK,UAAA,SAAS,EAAC,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1F7B,eAiG8B,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjG9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6HC,CA5LD;;GAAMH,mB;;KAAAA,mB;AA6LN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport { useGetAPI, usePutAPI } from '../useAPI'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst PaiementCreateModal = ({show, onShowShange}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n    // const {register, handleSubmit, errors } = useForm();\r\n\r\n    let paiementCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create`\r\n    // let abonnementTypeEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    let clientsEnd = `${process.env.REACT_APP_API_URL}/rest-api/clients-name-drop/`\r\n\r\n   const [abc, setAbc] = useState([])\r\n   const [abcId, setAbcId] = useState([])\r\n   const [client, setClient] = useState(\"\")\r\n   const [clients, setClients] = useState(\"\")\r\n   const [dettes, showDettes] = useState(false)\r\n   const [erreur, seterreur] = useState(false)\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [clientId, setClientId] = useState(\"\");\r\n   \r\n  //  const [abonnement, setAbonnement] = useState(\"\")\r\n   const [note, setNote] = useState(\"\")\r\n  //  const clients = useGetAPI(clientsEnd)\r\n\r\n    useEffect(() => {\r\n       const fetchData = async () => {\r\n          try {\r\n             const res = await axios.get(clientsEnd);\r\n             setClients(res.data)\r\n            //  console.log('les clizents ???', res.data.results);\r\n          } catch (error) {\r\n             console.log(error);\r\n          }\r\n       }\r\n       fetchData();\r\n    }, [] );\r\n    useEffect(() => {\r\n      if (show == true) {\r\n        \r\n        const fetchData = async () => {\r\n           try {\r\n              const res = await axios.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\r\n              setAbc(res.data)\r\n              console.log('ceci est le resultat de labonnement client ', res.data);\r\n           } catch (error) {\r\n              console.log(error);\r\n           }\r\n        }\r\n        fetchData();\r\n      }\r\n    }, [clientId] );\r\n    const handleSubmit =async e => {\r\n      e.preventDefault();\r\n      const newTransaction = {\r\n        amount : amount ,\r\n        abonnement_client: Number(abcId),\r\n        // type : Number(abonnement),\r\n        note : note\r\n      }\r\n      await axios.post(paiementCreateEnd, newTransaction)\r\n      // refreshPage()\r\n      handleShow()\r\n    }\r\n    console.log('creneaux detail');\r\n\r\nreturn ( \r\n\r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title>Paiement</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      \r\n    <form onSubmit={handleSubmit}>\r\n                                 <div className=\"form-row\">\r\n                                    {/* <div className=\"form-group col-md-6\">\r\n                                      <Autocomplete\r\n                                        // id={(option) =>  option['id']}\r\n                                        onChange={(event, value) => setAbonnement(value.id)}\r\n                                        // onChange={handleSubmit}\r\n                                        options={abonnements}\r\n                                       //  value={activities[creneauActivite]}\r\n                                        getOptionSelected={(option) =>  option['id']}\r\n                                        getOptionLabel={(option) =>  option['name']}\r\n                                        renderInput={(params) => <TextField {...params} required label=\"Type de Transaction\" variant=\"outlined\" fullWidth />}\r\n                                      />\r\n                                    </div> */}\r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <Autocomplete\r\n                                        // id={(option) =>  option['id']}\r\n                                        onChange={((event, value) =>  {\r\n                                          try {\r\n                                            setClientId(value.id)\r\n                                            seterreur(false)\r\n                                            showDettes(true)\r\n                                          } catch (error) {\r\n                                            setClientId('')\r\n                                            seterreur(true)\r\n                                          }\r\n                                        })}\r\n                                        // onChange={handleSubmit}\r\n                                        options={clients}\r\n                                       //  value={activities[creneauActivite]}\r\n                                        getOptionSelected={(option) =>  option['id']}\r\n                                        getOptionLabel={(option) =>  (  option['id'] +' - '+ option['last_name'])}\r\n                                        renderInput={(params) => \r\n                                          <TextField {...params}  label=\"Clients\" variant=\"outlined\" fullWidth required />}\r\n                                      />\r\n                                      {erreur && <p style={{color:'red'}}>veuillez choisir un client pour le paiement</p>}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <Autocomplete\r\n                                        // id={(option) =>  option['id']}\r\n                                        onChange={((event, value) =>  {\r\n                                          try {\r\n                                            setAbcId(value.id)\r\n                                            seterreur(false)\r\n                                            showDettes(true)\r\n                                          } catch (error) {\r\n                                            setAbcId('')\r\n                                            seterreur(true)\r\n                                          }\r\n                                        })}\r\n                                        // onChange={handleSubmit}\r\n                                        options={abc}\r\n                                       //  value={activities[creneauActivite]}\r\n                                        getOptionSelected={(option) =>  option['id']}\r\n                                        getOptionLabel={(option) =>  option['type_abonnement_name']}\r\n                                        renderInput={(params) => \r\n                                          <TextField {...params}  label=\"Abonnements\" variant=\"outlined\" fullWidth required />}\r\n                                      />\r\n                                      {erreur && <p style={{color:'red'}}>veuillez choisir un abonnement du client</p>}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <TextField\r\n                                      type=\"number\"\r\n                                    //   defaultValue={}\r\n                                      label=\"Montant\"\r\n                                      variant=\"outlined\"\r\n                                      onChange={e=> setAmount(e.currentTarget.value)}\r\n                                      // onChange={(event, value) => setNewStartHour(value)}\r\n                                      fullWidth\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <TextField\r\n                                      type=\"text\"\r\n                                      onChange={e=> setNote(e.currentTarget.value)}\r\n\r\n                                    //   defaultValue={endHour}\r\n                                      // value={creneauDetail.hour_finish}\r\n                                      // className={classes.textField}\r\n                                      variant=\"outlined\"\r\n                                      label=\"Note\"\r\n\r\n                                      fullWidth\r\n                                      // defaultValue={coachs[coach]}\r\n                                    //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n                                    />\r\n                                    </div>\r\n                                  </div>\r\n                                 <Button\r\n                                      onClick={handleShow}\r\n                                      variant=\"danger light\"\r\n                                      className='m-2'\r\n                                      >\r\n                                      Annulé\r\n                                  </Button>\r\n                                  <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n                                  </form>\r\n     </Modal.Body>\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PaiementCreateModal;"]},"metadata":{},"sourceType":"module"}