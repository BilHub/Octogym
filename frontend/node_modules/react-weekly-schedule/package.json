{
  "_from": "react-weekly-schedule@0.0.0-development",
  "_id": "react-weekly-schedule@0.0.0-development",
  "_inBundle": false,
  "_integrity": "sha512-MCBKe2ax8UHnUp2md7TebL3ggjnFe63lIOLNSQf6J23pu/a0dFiIhSW+F5iVXuiX1+xNeb69SbbmyIaJ82JT0A==",
  "_location": "/react-weekly-schedule",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "react-weekly-schedule@0.0.0-development",
    "name": "react-weekly-schedule",
    "escapedName": "react-weekly-schedule",
    "rawSpec": "0.0.0-development",
    "saveSpec": null,
    "fetchSpec": "0.0.0-development"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-weekly-schedule/-/react-weekly-schedule-0.0.0-development.tgz",
  "_shasum": "e4251d0f41cd9ec9e939ee90ee9c98f2e45b96c4",
  "_spec": "react-weekly-schedule@0.0.0-development",
  "_where": "/home/bil/Desktop/web projects/octopus/Octogym/frontend",
  "bugs": {
    "url": "https://github.com/SeanGroff/react-week-scheduler/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@reach/visually-hidden": "^0.1.2",
    "@rehooks/component-size": "^1.0.2",
    "classcat": "^3.2.5",
    "date-fns": "^1.30.1",
    "invariant": "^2.2.4",
    "lodash": "^4.17.11",
    "merge-ranges": "^1.0.2",
    "mousetrap": "^1.6.3",
    "re-resizable": "^4.11.0",
    "react-draggable": "^3.2.1",
    "rxjs": "^6.4.0",
    "scroll-into-view-if-needed": "^2.2.20"
  },
  "deprecated": false,
  "description": "![Travis (.org)](https://img.shields.io/travis/remotelock/react-week-scheduler.svg) ![npm](https://img.shields.io/npm/v/@remotelock/react-week-scheduler.svg)",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.0.0-0",
    "@babel/plugin-transform-runtime": "^7.3.4",
    "@babel/preset-env": "^7.3.4",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-typescript": "^7.3.3",
    "@commitlint/cli": "^7.5.2",
    "@svgr/parcel-plugin-svgr": "^4.1.0",
    "@tippy.js/react": "^2.1.1",
    "@types/invariant": "^2.2.29",
    "@types/jest": "^24.0.9",
    "@types/lodash": "4.14.120",
    "@types/mousetrap": "^1.6.1",
    "@types/node": "^11.10.4",
    "@types/react": "^16.8.8",
    "@types/react-dom": "^16.8.2",
    "@types/stylelint": "^9.4.2",
    "@typescript-eslint/eslint-plugin": "^1.4.2",
    "@typescript-eslint/parser": "^1.4.2",
    "babel-plugin-annotate-pure-calls": "^0.4.0",
    "babel-plugin-date-fns": "^0.2.1",
    "babel-plugin-transform-imports": "^1.5.1",
    "eslint": "^5.15.1",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-prettier": "^4.1.0",
    "eslint-plugin-compat": "^2.7.0",
    "eslint-plugin-css-modules": "^2.11.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-jsx-a11y": "^6.2.1",
    "eslint-plugin-react": "^7.12.4",
    "eslint-plugin-react-hooks": "^1.5.0",
    "gh-pages": "^2.0.1",
    "humanize-duration": "^3.18.0",
    "husky": "^1.3.1",
    "lint-staged": "^8.1.5",
    "node-sass": "^4.11.0",
    "nodemon": "^1.18.10",
    "npm-run-all": "^4.1.5",
    "parcel": "^1.12.0",
    "parcel-bundler": "^1.12.2",
    "pepjs": "^0.5.0",
    "postcss-modules": "^1.4.1",
    "prettier": "^1.16.4",
    "react": ">=16.8",
    "react-custom-properties": "^1.2.0",
    "react-dom": ">=16.8",
    "resize-observer-polyfill": "^1.5.1",
    "rimraf": "^2.6.3",
    "rollup": "^1.6.0",
    "rollup-plugin-auto-external": "^2.0.0",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-commonjs": "^9.2.1",
    "rollup-plugin-node-resolve": "^4.0.1",
    "rollup-plugin-postcss": "^2.0.3",
    "sass": "^1.17.2",
    "scroll-into-view-if-needed": "^2.2.20",
    "semantic-release": "^16.0.0-beta.22",
    "source-map-explorer": "^1.7.0",
    "stylelint": "^9.10.1",
    "stylelint-config-standard": "^18.2.0",
    "stylelint-csstree-validator": "^1.3.0",
    "stylelint-no-unsupported-browser-features": "^3.0.2",
    "typed-scss-modules": "^0.0.9",
    "typescript": "^3.3.3333",
    "use-undo": "^1.0.0",
    "yarnhook": "^0.4.0"
  },
  "engines": {
    "node": ">=10.13.0"
  },
  "homepage": "https://github.com/SeanGroff/react-week-scheduler/",
  "keywords": [
    "calendar",
    "time grid",
    "week",
    "scheduler",
    "schedule",
    "google calendar",
    "fullcalendar"
  ],
  "license": "MIT",
  "main": "index.js",
  "module": "index.js",
  "name": "react-weekly-schedule",
  "peerDependencies": {
    "pepjs": "^0.5.0",
    "react": "^16.8.4",
    "react-dom": "^16.8.4",
    "resize-observer-polyfill": "^1.5.1"
  },
  "private": false,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SeanGroff/react-week-scheduler.git"
  },
  "scripts": {
    "analyze": "source-map-explorer 'dist/*.js'",
    "build": "npm-run-all -s clean -p --aggregate-output types build/demo rollup",
    "build/demo": "NODE_ENV=production parcel build demo/index.html --public-url /react-week-scheduler/",
    "check-integrity": "yarn check --integrity",
    "check-prettier": "prettier '**/*.{t,j}s{,x}' '**/*.{css,scss,json,md}' --list-different",
    "check-ts": "tsc --project . --noEmit",
    "clean": "rimraf dist index.js index.mjs src/{!types}/*.d.ts index.css 'demo/**/*.d.ts' 'src/**/*.d.ts' 'src/**/*.map' './*.map'",
    "commitlint": "commitlint -e $GIT_PARAMS",
    "common-check": "run-p -c --aggregate-output lint check-prettier check-integrity",
    "deploy/demo": "gh-pages -d dist",
    "lint": "run-p -c --aggregate-output lint-ts lint-scss",
    "lint-scss": "stylelint '**/*.scss'",
    "lint-staged": "lint-staged",
    "lint-ts": "run-p -c --aggregate-output 'lint-ts/*'",
    "lint-ts/eslint": "eslint '**/*.ts{,x}'",
    "pre-commit": "yarn common-check",
    "prebuild": "npm-run-all -s clean -p lint check-ts",
    "precheck-ts": "run-p types/scss",
    "prestart": "run-p types/scss",
    "rollup": "NODE_ENV=production rollup -c rollup.config.js -m",
    "run-prettier": "prettier --write '*.json' 'types/**/*.ts' 'src/**/*.ts{,x}' 'src/**/*.scss'",
    "semantic-release": "semantic-release",
    "start": "run-p types/scss/dev start/parcel",
    "start/parcel": "parcel demo/index.html",
    "types": "run-s types/scss types/ts",
    "types/scss": "yarn tsm '{src,demo}/**/*.scss' -n none -e default && yarn types/scss/fix",
    "types/scss/dev": "nodemon -w '{src,demo}/**/*.scss' --exec 'yarn types/scss'",
    "types/scss/fix": "for file in src/**/*.scss.d.ts; do echo export $(cat $file) > $file; done",
    "types/ts": "yarn tsc -p ./tsconfig.types.json"
  },
  "sideEffects": [
    "*.css"
  ],
  "types": "./src/index.d.ts",
  "version": "0.0.0-development"
}
